A binary string is monotone increasing if it consists of some number of 0's (possibly none), followed by some number of 1's (also possibly none).
You are given a binary string s. You can flip s[i] changing it from 0 to 1 or from 1 to 0.
Return the minimum number of flips to make s monotone increasing.
 

Example 1:

Input: s = "00110"
Output: 1
Explanation: We flip the last digit to get 00111.

Solution:

class Solution {
public:
    int minFlipsMonoIncr(string s) {
        int countone=0;
        int flipcount=0;
        int n=s.length();
        for(int i=0;i<n;i++)
        {
            if(s[i]=='1')
              countone++;
            if(s[i]=='0')
            {
                if(countone>0)
                  flipcount++;
            }
            flipcount=min(countone,flipcount);
        }
        return flipcount;
    }
};
