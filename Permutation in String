Given two strings s1 and s2, return true if s2 contains a permutation of s1, or false otherwise.
In other words, return true if one of s1's permutations is the substring of s2.

Example 1:

Input: s1 = "ab", s2 = "eidbaooo"
Output: true
Explanation: s2 contains one permutation of s1 ("ba").

Example 2:

Input: s1 = "ab", s2 = "eidboaoo"
Output: false


Solution:

class Solution {
public:
    bool checkInclusion(string s1, string s2) {
        vector<int> v(26,0);
        int n1=s1.length();
        int n2=s2.length();
        for(auto i:s1)
          v[i-'a']++;

        for(int i=0;i<n2;i++)
        {
            string temp=s2.substr(i,n1);
            vector<int> check(26,0);
            for(auto e:temp)
            {
              check[e-'a']++;
            }
            if(check==v)
              return true;
        }
        return false;
    }
};
