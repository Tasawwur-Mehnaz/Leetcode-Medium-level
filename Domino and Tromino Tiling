You have two types of tiles: a 2 x 1 domino shape and a tromino shape. You may rotate these shapes.
Given an integer n, return the number of ways to tile an 2 x n board. Since the answer may be very large, return it modulo 109 + 7.
In a tiling, every square must be covered by a tile. Two tilings are different if and only if there are two 4-directionally adjacent cells on the board 
such that exactly one of the tilings has both squares occupied by a tile.
 

Example 1:

Input: n = 3
Output: 5
Explanation: The five different ways are show above.


Solution:

class Solution {
public:
    long mod=1e9+7;
    int process(int n,vector<int> &dp)
    {
        if(n<=1)
          return 1;
        if(n==2)
          return 2;
        if(dp[n]!=1)
          return dp[n];
        dp[n]=(2*process(n-1,dp)%mod+process(n-3,dp)%mod)%mod;
        return dp[n];
    }
    int numTilings(int n) {
        vector<int> dp(n+2,1);
        dp[2]=2;
        return process(n,dp);
    }
};
