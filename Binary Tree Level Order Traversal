Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]

Solution:

class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        if(root==NULL)
            return ans;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty())
        {
            vector<int> v;
            int n=q.size();
         
            for(int i=0;i<n;i++)
            {    
                TreeNode* node=q.front();
                q.pop();
                if(node->left)
                {
                  q.push(node->left);  
                }
                if(node->right)
                {  
                   q.push(node->right);    
                }
                v.push_back(node->val);
            }
            
            ans.push_back(v);
        }
        return ans;
    }
};
