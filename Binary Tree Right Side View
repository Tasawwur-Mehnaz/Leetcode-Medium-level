Given the root of a binary tree, imagine yourself standing on the right side of it, return the values of the nodes you can see ordered from top to bottom.

Input: root = [1,2,3,null,5,null,4]
Output: [1,3,4]

Input: root:[1,2,3,4]
output:[1,3,4]

Solution:

class Solution {
public:
    vector<int> ans;
    void process(TreeNode* root,int level)
    {
        if(root==NULL)
            return;
        if(level==ans.size())
           ans.push_back(root->val);
        
        process(root->right,level+1);
        process(root->left,level+1);
        return;
    }
    vector<int> rightSideView(TreeNode* root) {
        process(root,0);
        return ans;
    }
};
