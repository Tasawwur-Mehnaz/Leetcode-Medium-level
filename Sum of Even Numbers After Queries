You are given an integer array nums and an array queries where queries[i] = [vali, indexi].
For each query i, first, apply nums[indexi] = nums[indexi] + vali, then print the sum of the even values of nums.
Return an integer array answer where answer[i] is the answer to the ith query.

Example 1:
Input: nums = [1,2,3,4], queries = [[1,0],[-3,1],[-4,0],[2,3]]
Output: [8,6,2,4]
Explanation: At the beginning, the array is [1,2,3,4].
After adding 1 to nums[0], the array is [2,2,3,4], and the sum of even values is 2 + 2 + 4 = 8.
After adding -3 to nums[1], the array is [2,-1,3,4], and the sum of even values is 2 + 4 = 6.
After adding -4 to nums[0], the array is [-2,-1,3,4], and the sum of even values is -2 + 4 = 2.
After adding 2 to nums[3], the array is [-2,-1,3,6], and the sum of even values is -2 + 6 = 4.

Solution:

class Solution {
public:
    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& queries) {
        vector<int> ans(queries.size());
        int j=0;
        int sum=0;
        for(auto i:nums)
        {
            if(i%2==0)
                sum+=i;
        }
        for(auto i: queries)
        {
            int val=i[0];
            int ind=i[1];
            int t=nums[ind];
            nums[ind]+=val;
            
            if(t%2!=0 && val%2!=0)
                sum+=nums[ind];
            
            else if(t%2==0 && val%2!=0)
                sum-=t;
            
            else if(t%2==0 && val%2==0)
                sum+=val;
            
            ans[j]=sum;
            j++;
            
        }
        return ans;
    }
};

OR

class Solution {
public:
    vector<int> sumEvenAfterQueries(vector<int>& nums, vector<vector<int>>& queries) {
        vector<int> ans(queries.size());
        int j=0;
        int sum=0;
        for(auto i:nums)
        {
            if(i%2==0)
                sum+=i;
        }
        for(auto i: queries)
        {
            int val=i[0];
            int ind=i[1];
           
            if(nums[ind]%2==0)
                sum-=nums[ind];
            
            nums[ind]+=val;
           
            if(nums[ind]%2==0)
                sum+=nums[ind];
            
            ans[j]=sum;
            j++;   
        }
        return ans;
    }
};
